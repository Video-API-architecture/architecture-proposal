sequenceDiagram
    participant AdminUI
    participant Auth as AuthMiddleware
    participant ABC as "Api::V1::Admin::BookingsController"
    participant Booking as BookingModel
    participant NotificationWorker
    participant AuditLog

    %% Auth check (admin only)
    AdminUI->>Auth: Request with JWT token
    Auth->>Auth: Decode + verify + check admin scope
    Auth-->>ABC: Set current_user or reject (401/403)

    %% List all bookings
    AdminUI->>ABC: GET /api/v1/admin/bookings
    ABC->>Booking: .all or .filter(params)
    Booking-->>ABC: [ ...booking_list ]
    ABC-->>AdminUI: Return bookings JSON

    %% Get booking details
    AdminUI->>ABC: GET /api/v1/admin/bookings/:id
    ABC->>Booking: .find(id)
    Booking-->>ABC: booking
    ABC-->>AdminUI: Return booking JSON

    %% Update booking
    AdminUI->>ABC: PUT /api/v1/admin/bookings/:id
    ABC->>Booking: .find(id)
    Booking->>Booking: .update(params)
    ABC->>AuditLog: log("booking_updated", user_id: current_user.id, booking_id: booking.id)
    AuditLog-->>ABC: ok
    ABC->>NotificationWorker: perform_async("booking_update", { booking_id: booking.id })
    NotificationWorker-->>ABC: queued
    ABC-->>AdminUI: Return updated booking

    %% Cancel booking
    AdminUI->>ABC: DELETE /api/v1/admin/bookings/:id
    ABC->>Booking: .find(id)
    Booking->>Booking: .cancel!
    ABC->>AuditLog: log("booking_cancelled", user_id: current_user.id, booking_id: booking.id)
    AuditLog-->>ABC: ok
    ABC->>NotificationWorker: perform_async("booking_cancelled", { booking_id: booking.id })
    NotificationWorker-->>ABC: queued
    ABC-->>AdminUI: Return cancellation confirmation
